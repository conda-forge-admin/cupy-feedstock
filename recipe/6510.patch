From d1176d036ab18c2a6589a76029d04a39ed70497f Mon Sep 17 00:00:00 2001
From: Kenichi Maehashi <webmaster@kenichimaehashi.com>
Date: Fri, 25 Feb 2022 17:42:32 +0900
Subject: [PATCH] skip appending --compiler-bindir if cl.exe is already on PATH

---
 install/cupy_builder/_command.py  |  2 ++
 install/cupy_builder/_compiler.py | 13 ++++++++++---
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/install/cupy_builder/_command.py b/install/cupy_builder/_command.py
index afb9de82d59..6d82a786e4c 100644
--- a/install/cupy_builder/_command.py
+++ b/install/cupy_builder/_command.py
@@ -102,6 +102,8 @@ def build_extensions(self) -> None:
             for src in ext.sources:
                 if not os.path.isfile(src):
                     raise RuntimeError(f'Fatal error: missing file: {src}')
+
+        print('Building extensions...')
         super().build_extensions()
 
     def build_extension(self, ext: setuptools.Extension) -> None:
diff --git a/install/cupy_builder/_compiler.py b/install/cupy_builder/_compiler.py
index c5f146f9d73..f707797a77d 100644
--- a/install/cupy_builder/_compiler.py
+++ b/install/cupy_builder/_compiler.py
@@ -2,6 +2,7 @@
 import os
 import os.path
 import platform
+import shutil
 import sys
 import subprocess
 from typing import Optional, List
@@ -208,18 +209,24 @@ def compile(self, obj: str, src: str, ext: Extension) -> None:
             num_threads = int(os.environ.get('CUPY_NUM_NVCC_THREADS', '2'))
             postargs += [f'-t{num_threads}']
         cl_exe_path = self._find_host_compiler_path()
-        if cl_exe_path is None:
-            print('Warning: Host compiler path could not be detected')
-        else:
+        if cl_exe_path is not None:
+            print(f'Using host compiler at {cl_exe_path}')
             postargs += ['--compiler-bindir', cl_exe_path]
         print('NVCC options:', postargs)
         self.spawn(compiler_so + cc_args + [src, '-o', obj] + postargs)
 
     def _find_host_compiler_path(self) -> Optional[str]:
+        # c.f. cupy.cuda.compiler._get_extra_path_for_msvc
+        cl_exe = shutil.which('cl.exe')
+        if cl_exe:
+            # The compiler is already on PATH, no extra path needed.
+            return None
+
         vctools: List[str] = setuptools.msvc.EnvironmentInfo(
             platform.machine()).VCTools
         for path in vctools:
             cl_exe = os.path.join(path, 'cl.exe')
             if os.path.exists(cl_exe):
                 return path
+        print(f'Warning: cl.exe could not be found in {vctools}')
         return None
