diff --git a/install/cupy_builder/install_build.py b/install/cupy_builder/install_build.py
index d0317e324..05518ab3a 100644
--- a/install/cupy_builder/install_build.py
+++ b/install/cupy_builder/install_build.py
@@ -692,6 +692,13 @@ def get_cusparselt_version(formatted=False):
 def build_shlib(compiler, source, libraries=(),
                 include_dirs=(), library_dirs=(), define_macros=None,
                 extra_compile_args=()):
+    include_dirs = list(include_dirs) + [f'{os.environ["BUILD_PREFIX"]}/include',
+                                         f'{os.environ["BUILD_PREFIX"]}/targets/x86_64-linux/include',
+                                         f'{os.environ["PREFIX"]}/targets/x86_64-linux/include']  # TODO: generalize for different host archs
+    library_dirs = list(library_dirs) + [f'{os.environ["BUILD_PREFIX"]}/lib',
+                                         f'{os.environ["BUILD_PREFIX"]}/targets/x86_64-linux/lib',
+                                         f'{os.environ["PREFIX"]}/targets/x86_64-linux/lib']  # TODO: cannot use host lib if cross-compiling
+
     with _tempdir() as temp_dir:
         fname = os.path.join(temp_dir, 'a.cpp')
         with open(fname, 'w') as f:
@@ -717,6 +724,13 @@ def build_shlib(compiler, source, libraries=(),
 def build_and_run(compiler, source, libraries=(),
                   include_dirs=(), library_dirs=(), define_macros=None,
                   extra_compile_args=()):
+    include_dirs = list(include_dirs) + [f'{os.environ["BUILD_PREFIX"]}/include',
+                                         f'{os.environ["BUILD_PREFIX"]}/targets/x86_64-linux/include',
+                                         f'{os.environ["PREFIX"]}/targets/x86_64-linux/include']  # TODO: generalize for different host archs
+    library_dirs = list(library_dirs) + [f'{os.environ["BUILD_PREFIX"]}/lib',
+                                         f'{os.environ["BUILD_PREFIX"]}/targets/x86_64-linux/lib',
+                                         f'{os.environ["PREFIX"]}/targets/x86_64-linux/lib']  # TODO: cannot use host lib if cross-compiling
+
     with _tempdir() as temp_dir:
         fname = os.path.join(temp_dir, 'a.cpp')
         with open(fname, 'w') as f:
